!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.TreeWalker={})}(this,function(e){"use strict";let t=null;const r=()=>t;var n,o,a=(function(e,t){Object.defineProperty(t,"__esModule",{value:!0});const r=(e=>(t,r)=>Boolean(t&&e.call(t,r)))(Object.prototype.hasOwnProperty);t.hasOwn=r,t.default=r}(n={exports:{}},n.exports),n.exports),s=(o=a)&&o.__esModule&&Object.prototype.hasOwnProperty.call(o,"default")?o.default:o;a.hasOwn;const i={},l=e=>"string"==typeof e&&1===e.length&&s(i,e),d=e=>e&&"string"==typeof e&&e.length>1&&s(i,e.charAt()),p=e=>i[e.charAt()],c=e=>`${parseInt(e,10)}`===e,u=(e,t,r)=>void 0!==r?t.getChildrenByName(e,r):e,g=(e,t,r)=>{const n=u(e,t,r);return t.isList(n)?t.getNodeAt(e):n},h=(e,t,r)=>t.toList(u(e,t,r));let f={};const w=(e={})=>{f=Object.assign({},f,e)},N=e=>e&&"string"==typeof e&&f.hasOwnProperty(e);let y,m;const A=(e,t,r)=>t.isNode(e)||t.isList(e)?new Proxy(((e,t,r)=>{function n(){throw new Error("Should have been never called")}return n.node=e,n.childName=r,n.adapter=t,n})(e,t,r),y):e;m={isIntKey:c,getValue:u,getSingleNode:g,getNodeList:h,wrap:A};y={get:({node:e,adapter:t,childName:r},n)=>{if(c(n))return A(t.getNodeAt(h(e,t,r),n),t);if(d(n))return p(n)(u(e,t,r),t,[n.substr(1)],m);return A(u(e,t,r),t,n)},has:({node:e,adapter:t,childName:r},n)=>c(n)?!!t.getNodeAt(h(e,t,r),n):!!d(n)||t.hasChild(g(),n),apply:({node:e,adapter:t,childName:r},n,o)=>{if(void 0===r)throw new Error("Cannot call on TreeWalker Node");if(l(r))return p(r)(e,t,o,m);if(N(r))return((e,...t)=>f[e](...t))(r,e,t,o,m);throw new Error(`"${r}" is not a callable object.`)}};var L={toString:e=>e.toString(),valueOf:e=>e,[Symbol.toPrimitive]:e=>e};const v=(e,t,r,n)=>{const o=[],a=t.getChildren(e),s=t.getLength(a,t);for(let e=0;e<s;e+=1){const s=a[e];o.push(s),o.push.apply(o,v(s,t,r,n))}return o},b=(e,t,r,n)=>{const[o]=r,a=[],s=t.getChildren(e),i=t.getLength(s,t);for(let e=0;e<i;e+=1){const i=s[e];t.getName(i)===o&&a.push(i),a.push.apply(a,b(i,t,r,n))}return a};var O={children:(e,t,[r],n)=>{let o;return o=r?t.getChildrenByName(e,r):t.getChildren(e),n.wrap(o,t)},descendants:(e,t,r,n)=>{const[o]=r;return o?n.wrap(b(e,t,r,n),t):n.wrap(v(e,t,r,n),t)},childAt:(e,t,[r=0],n)=>n.wrap(t.getChildAt(e,r),t),root:(e,t,r,n)=>n.wrap(t.getNodeRoot(e),t),parent:(e,t,r,n)=>n.wrap(t.getNodeParent(e),t)};const P=(e,t,r,n)=>{const[o]=r;let a=[];if(t.isList(e)){const r=t.getNodeAt(e,o);r&&(a=r)}return n.wrap(a,t)};var x={length:(e,t)=>t.isList(e)?t.getLength(e):t.isNode(e)?1:0,at:P,first:(e,t,r,n)=>P(e,t,[0],n),filter:(e,t,[r],n)=>{const o=t.toList(e),a=t.getLength(e),s=[],i=n.wrap(o,t);for(let e=0;e<a;e+=1){const a=t.getNodeAt(o,e);r(n.wrap(a,t),e,i)&&s.push(a)}return n.wrap(s,t)},map:(e,t,[r,n=!0],o)=>{const a=t.toList(e),s=t.getLength(a),i=[];let l=!0;const d=o.wrap(a,t);for(let e=0;e<s;e+=1){const n=t.getNodeAt(a,e),s=r(o.wrap(n,t),e,d);l=l&&t.isNode(s),i.push(s)}return n&&l?o.wrap(i,t):i},reduce:(e,t,[r,n],o)=>{const a=t.toList(e),s=t.getLength(e);let i=n;const l=o.wrap(a,t);for(let e=0;e<s;e+=1){const s=t.getNodeAt(a,e);i=r(n,o.wrap(s,t),e,l)}return i}};w(L);const C=(e,t=r())=>A(t.validateRoot(e),t);e.setDefaultAdapter=(e=>{t=e}),e.getDefaultAdapter=r,e.addAugmentations=w,e.hasAugmentation=N,e.resetAugmentations=((e={})=>{f=e}),e.coreAugmentations=L,e.nodeAugmentations=O,e.listAugmentations=x,e.setNamePrefix=((e,t)=>{if("string"!=typeof e||1!==e.length)throw new Error("Name Prefix must be one character string.");i[e]=t}),e.isValidPrefix=l,e.create=C,e.default=C,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=tree-walker.min.js.map
