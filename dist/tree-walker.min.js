!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.TreeWalker={})}(this,function(e){"use strict";let t;const r=()=>t;var o,n,s=(function(e,t){Object.defineProperty(t,"__esModule",{value:!0});const r=(e=>(t,r)=>Boolean(t&&e.call(t,r)))(Object.prototype.hasOwnProperty);t.hasOwn=r,t.default=r}(o={exports:{}},o.exports),o.exports),a=(n=s)&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n;s.hasOwn;const i={},d=e=>e.charAt(),p=e=>!!(e&&"string"==typeof e&&e.length>1)&&a(i,d(e)),l=e=>t=>{const r=(e=>i[d(e)])(t);return r&&r[e]},u=l("get"),c=l("has"),f=l("set"),g=l("deleteProperty"),h=e=>"number"==typeof e&&e>>>0===e||`${parseInt(String(e),10)}`===e,y=(e,t,r)=>void 0!==r?t.getChildrenByName(e,r):e,w=(e,t,r)=>t.toNode(y(e,t,r)),N=(e,t,r)=>t.toList(y(e,t,r));let m={};const b=e=>{m=Object.assign({},m,e)},A=e=>e&&"string"==typeof e&&a(m,e);let L,v;const P={constructor:!0,prototype:!0},O=(e,t,r)=>t.isNode(e)||t.isList(e)?new Proxy(((e,t,r)=>{function o(){throw new Error("Should have been never called")}return o.node=e,o.childName=r,o.adapter=t,o})(e,t,r),L):e;v={isIntKey:h,getValue:y,getSingleNode:w,getNodeList:N,wrap:O};const x=(e,t,r)=>{if(!r)throw new Error(`Operation "${e}" is not supported for prefix "${d(t)}".`)};L={get:({node:e,adapter:t,childName:r},o)=>{if("symbol"==typeof o||!0===P[o])return w(e,t,r)[o];if(h(o))return O(t.getNodeAt(N(e,t,r),o),t);if(p(o)){const n=u(o);return x("get",o,n),n(y(e,t,r),t,[o.substr(1)],v)}const n=y(e,t,r);return O(n,t,o)},has:({node:e,adapter:t,childName:r},o)=>{if("symbol"==typeof o||!0===P[o])return o in w(e,t,r);if(h(o))return!!t.getNodeAt(N(e,t,r),o);if(p(o)){const n=c(o);return x("has",o,n),n(y(e,t,r),t,[o.substr(1)],v)}return t.hasChild(w(e,t,r),o)},apply:({node:e,adapter:t,childName:r},o,n)=>{if(void 0===r)throw new Error("Cannot call on TreeWalker Node");if(A(r))return((e,...t)=>m[e](...t))(r,e,t,n,v);const s=t.toNode(e);if("function"==typeof s[r])return s[r](...n);throw new Error(`"${r}" is not a callable object.`)},set:({node:e,adapter:t,childName:r},o,n)=>{if("symbol"==typeof o||!0===P[o])return w(e,t,r)[o]=n,!0;if(p(o)){const s=f(o);return x("set",o,s),s(y(e,t,r),t,[o.substr(1),n],v)}throw new Error('Operation "set" is not supported for nodes.')},deleteProperty:({node:e,adapter:t,childName:r},o)=>{if("symbol"==typeof o||!0===P[o])return delete w(e,t,r)[o];if(p(o)){const n=g(o);return x("deleteProperty",o,n),n(y(e,t,r),t,[o.substr(1)],v)}throw new Error('Operation "deleteProperty" is not supported for nodes.')}};var C={toString:(e,t)=>t.string?t.string(e):e.toString(),valueOf:(e,t)=>t.value?t.value(e):e};const E=(e,t,r,o)=>{const n=[],s=[],a=t.getChildren(e),i=t.getLength(a,t);for(let e=0;e<i;e+=1){const i=a[e];n.push(i),s.push.apply(s,E(i,t,r,o))}return[...n,...s]},j=(e,t,r,o)=>{const[n]=r,s=[],a=[],i=t.getChildren(e),d=t.getLength(i,t);for(let e=0;e<d;e+=1){const d=t.getNodeAt(i,e);t.getName(d)===n&&s.push(d),a.push.apply(a,j(d,t,r,o))}return[...s,...a]};var _={name:(e,t)=>t.getName(e),children:(e,t,[r],o)=>{let n;return n=r?t.getChildrenByName(e,r):t.getChildren(e),o.wrap(n,t)},descendants:(e,t,r,o)=>{const[n]=r;return n?o.wrap(j(e,t,r,o),t):o.wrap(E(e,t,r,o),t)},childAt:(e,t,[r=0],o)=>o.wrap(t.getChildAt(e,r),t),root:(e,t,r,o)=>o.wrap(t.getNodeRoot(e),t),parent:(e,t,r,o)=>o.wrap(t.getNodeParent(e),t)};const S=(e,t,r,o)=>{const[n=0]=r;let s;if(t.isList(e)){const r=t.getNodeAt(e,n);r&&(s=r)}else n||(s=e);return o.wrap(s||[],t)};var $={length:(e,t)=>t.isList(e)?t.getLength(e):t.isNode(e)?1:0,at:S,first:(e,t,r,o)=>S(e,t,[0],o),filter:(e,t,[r],o)=>{const n=t.toList(e),s=t.getLength(e),a=[],i=o.wrap(n,t);for(let e=0;e<s;e+=1){const s=t.getNodeAt(n,e);r(o.wrap(s,t),e,i)&&a.push(s)}return o.wrap(a,t)},map:(e,t,[r],o)=>{const n=t.toList(e),s=t.getLength(n),a=[],i=o.wrap(n,t);for(let e=0;e<s;e+=1){const s=t.getNodeAt(n,e),d=r(o.wrap(s,t),e,i);a.push(d)}return a},forEach:(e,t,[r],o)=>{const n=t.toList(e),s=t.getLength(n),a=o.wrap(n,t);for(let e=0;e<s;e+=1){const s=t.getNodeAt(n,e);r(o.wrap(s,t),e,a)}},reduce:(e,t,[r,o],n)=>{const s=t.toList(e),a=t.getLength(e);let i=o;const d=n.wrap(s,t);for(let e=0;e<a;e+=1){const o=t.getNodeAt(s,e);i=r(i,n.wrap(o,t),e,d)}return i}};b(C);const B=(e,t=r())=>O(t.validateRoot(e),t);e.setDefaultAdapter=(e=>{t=e}),e.getDefaultAdapter=r,e.addAugmentations=b,e.hasAugmentation=A,e.resetAugmentations=((e={})=>{m=e}),e.coreAugmentations=C,e.nodeAugmentations=_,e.listAugmentations=$,e.setNamePrefix=((e,t)=>{if("string"!=typeof e||1!==e.length)throw new Error("Name Prefix must be one character string.");if("function"==typeof t)i[e]={get:t,has:(...e)=>void 0!==t(...e)};else{const{get:r,set:o,has:n,deleteProperty:s}=t;i[e]={get:r,set:o,has:n,deleteProperty:s}}}),e.isValidPrefix=(e=>"string"==typeof e&&a(i,e)),e.create=B,e.default=B,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=tree-walker.min.js.map
