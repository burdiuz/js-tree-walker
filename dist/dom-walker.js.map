{"version":3,"file":"dom-walker.js","sources":["../source/default-adapter.js","../source/prefixes.js","../source/augmentations/index.js","../source/utils.js","../source/wrapper.js","../source/augmentations/core.js","../source/augmentations/event.js","../source/augmentations/list.js","../source/augmentations/node.js","../source/htmlro-adapter.js","../source/index.js"],"sourcesContent":["let defaultAdapter = null;\r\n\r\nexport const setDefaultAdapter = (adapter) => {\r\n  defaultAdapter = adapter;\r\n};\r\nexport const getDefaultAdapter = () => defaultAdapter;\r\n","const namePrefixes = {};\r\n\r\nexport const isValidPrefix = (prefix) => (\r\n  typeof prefix === 'string'\r\n  && prefix.length === 1\r\n  && namePrefixes.hasOwnProperty(prefix)\r\n);\r\n\r\nexport const isPrefixedKey = (key) => (\r\n  key\r\n  && typeof(key) === 'string'\r\n  && key.length > 1\r\n  && namePrefixes.hasOwnProperty(key.charAt())\r\n);\r\n\r\nexport const getPrefixHandler = (key) => namePrefixes[key.charAt()];\r\n\r\nexport const setNamePrefix = (prefix, handler) => {\r\n  if (typeof prefix !== 'string' || prefix.length !== 1) {\r\n    throw new Error('Name Prefix must be one character string.');\r\n  }\r\n\r\n  namePrefixes[prefix] = handler;\r\n};\r\n","let augmentations = {};\r\n\r\nexport const resetAugmentations = (augs = {}) => {\r\n  augmentations = augs;\r\n};\r\n\r\nexport const addAugmentations = (augs = {}) => {\r\n  augmentations = {\r\n    ...augmentations,\r\n    ...augs,\r\n  };\r\n};\r\n\r\nexport const hasAugmentation = (key) => (\r\n  key\r\n  && typeof key === 'string'\r\n  && augmentations.hasOwnProperty(key)\r\n);\r\n\r\nexport const getAugmentation = (key) => augmentations[key];\r\n\r\nexport const applyAugmentation = (key, ...args) => augmentations[key](...args);\r\n","export const isIntKey = (key) => (`${parseInt(key, 10)}` === key);\r\n\r\nexport const getValue = (node, adapter, childName = undefined) => {\r\n  if (childName !== undefined) {\r\n    return adapter.getChildrenByName(node, childName);\r\n  }\r\n\r\n  return node;\r\n};\r\n\r\nexport const getSingleNode = (node, adapter, childName = undefined) => {\r\n  const value = getValue(node, adapter, childName);\r\n\r\n  if (adapter.isList(value)) {\r\n    return adapter.getNodeAt(node);\r\n  }\r\n\r\n  return value;\r\n};\r\n\r\nexport const getNodeList = (node, adapter, childName = undefined) => {\r\n  return adapter.toList(getValue(node, adapter, childName));\r\n};\r\n","import {\r\n  isIntKey,\r\n  getValue,\r\n  getSingleNode,\r\n  getNodeList,\r\n} from './utils';\r\n\r\nimport {\r\n  isPrefixedKey,\r\n  isValidPrefix,\r\n  getPrefixHandler,\r\n} from './prefixes';\r\n\r\nimport {\r\n  hasAugmentation,\r\n  applyAugmentation,\r\n} from './augmentations';\r\n\r\nlet handlers;\r\nlet utils;\r\n\r\nconst createWalkerNode = (node, adapter, childName = undefined) => {\r\n  function TreeWalker() {\r\n    throw new Error('should have been never called');\r\n  }\r\n\r\n  // can be single Node and NodeList with length >= 0\r\n  // should it be always NodeList?\r\n  TreeWalker.node = node;\r\n  // childName always String/Symbol, Number's are being handled in proxy get wrapper\r\n  // INFO \"name\" is RO property of Function object\r\n  TreeWalker.childName = childName;\r\n  TreeWalker.adapter = adapter;\r\n  return TreeWalker;\r\n};\r\n\r\nconst wrapWithProxy = (node, adapter, childName = undefined) => {\r\n  if (!adapter.isNode(node) && !adapter.isList(node)) {\r\n    return node;\r\n  }\r\n\r\n  return new Proxy(createWalkerNode(node, adapter, childName), handlers);\r\n};\r\n\r\n// eslint-disable-next-line\r\nutils = {\r\n  isIntKey,\r\n  getValue,\r\n  getSingleNode,\r\n  getNodeList,\r\n  wrapWithProxy,\r\n};\r\n\r\nconst get = ({ node, adapter, childName }, key) => {\r\n  /*\r\n   if string childName used\r\n   if starts with $, return attribute value\r\n   else return wrapper with current single node and property childName\r\n   if numeric index used, use node as parent and childName is undefined\r\n   */\r\n  if (isIntKey(key)) {\r\n    return wrapWithProxy(adapter.getNodeAt(getNodeList(node, adapter, childName), key), adapter);\r\n  }\r\n\r\n  if (isPrefixedKey(key)) {\r\n    const handler = getPrefixHandler(key);\r\n    return handler(getValue(node, adapter, childName), adapter, [key.substr(1)], utils);\r\n  }\r\n\r\n  // return wrap with node and childName\r\n  return wrapWithProxy(getValue(node, adapter, childName), adapter, key);\r\n};\r\n\r\nconst has = ({ node, adapter, childName }, key) => {\r\n  if (isIntKey(key)) {\r\n    return !!adapter.getNodeAt(getNodeList(node, adapter, childName), key);\r\n  }\r\n\r\n  if (isPrefixedKey(key)) {\r\n    // return adapter.hasAttribute(getSingleNode(node, adapter, childName), key.substr(1));\r\n    // don't know how to implement this, calling same handler as in GET seems overkill\r\n    return true;\r\n  }\r\n\r\n  return adapter.hasChild(getSingleNode(), key);\r\n};\r\n\r\nconst apply = ({ node, adapter, childName }, thisArg, argumentsList) => {\r\n  if (childName === undefined) {\r\n    throw new Error('Cannot call on TreeWalker Node');\r\n  }\r\n\r\n  // this works only of childName === prefix, one char string\r\n  // otherwise it should be passed into arguments\r\n  if (isValidPrefix(childName)) {\r\n    const handler = getPrefixHandler(childName);\r\n    return handler(node, adapter, argumentsList, utils);\r\n  }\r\n\r\n  if (hasAugmentation(childName)) {\r\n    // INFO cannot use target because it contains method's childName, not Node childName\r\n    // call the function with saving context, so other augmentations are accessible via \"this\"\r\n    return applyAugmentation(childName, node, adapter, argumentsList, utils);\r\n  }\r\n\r\n  // FIXME might throw only in dev mode(needs implmentation)\r\n  throw new Error(`\"${childName}\" is not a callable object.`);\r\n};\r\n\r\nhandlers = {\r\n  get,\r\n  has,\r\n  apply,\r\n};\r\n\r\nexport default wrapWithProxy;\r\n\r\n","const toString = (node) => node.toString();\r\nconst valueOf = (node) => node;\r\n\r\nexport default {\r\n  toString,\r\n  valueOf,\r\n  [Symbol.toPrimitive]: (node) => node,\r\n};\r\n","const on = (node, adapter, [ eventType, callback ], utils) => {\r\n  // add even listener\r\n};\r\n\r\nconst off = (node, adapter, [ eventType, callback ], utils) => {\r\n  // remove even listener\r\n};\r\n\r\nconst emmit = (node, adapter, [ event ], utils) => {\r\n  // dispatch event\r\n};\r\n\r\nexport default {\r\n  on,\r\n  off,\r\n  emmit,\r\n};\r\n","const length = (node, adapter) => {\r\n  if (adapter.isList(node)) {\r\n    return adapter.getLength(node);\r\n  } else if (adapter.isNode(node)) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst first = (node, adapter, args, utils) => {\r\n\r\n};\r\n\r\nconst filter = (node, adapter, [ callback ], utils) => {\r\n  // apply filter on element collection\r\n  // allways return wrapped HTMLCollection\r\n};\r\n\r\nconst map = (node, adapter, [ callback, wrapNodes = true ], utils) => {\r\n  // apply map on element collection\r\n  // if wrapNodes in FALSE, will generate normal Array with RAW results in it\r\n  // if wrapNodes in TRUE, will generate wrapped HTMLCollection and put all result into it\r\n};\r\n\r\nconst reduce = (node, adapter, [ callback, head ], utils) => {\r\n  // apply reduce on element collection\r\n};\r\n\r\nexport default {\r\n  length,\r\n  first,\r\n  filter,\r\n  map,\r\n  reduce,\r\n};\r\n","const name = (node, adapter, args, utils) =>\r\n  adapter.getName(utils.getSingleNode(node, adapter));\r\n\r\nconst text = (node, adapter) =>\r\n  adapter.getText(node);\r\n\r\nconst children = (node, adapter, [childName], utils) => {\r\n  node = utils.getSingleNode(node, adapter);\r\n  let list;\r\n\r\n  if (childName) {\r\n    list = adapter.getChildrenByName(node, childName);\r\n  } else {\r\n    list = adapter.getChildren(node);\r\n  }\r\n\r\n  return utils.wrapWithProxy(list, adapter);\r\n};\r\n\r\n// FIXME move parts to adapter\r\nconst attributes = (node, adapter, args, utils) => {\r\n  const target = utils.getSingleNode(node, adapter);\r\n  if (target.hasAttributes()) {\r\n    return target.attributes;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n// FIXME move parts to adapter\r\nconst attribute = (node, adapter, [attrName], utils) => {\r\n  const attrs = attributes(node, adapter, [], utils);\r\n  if (attrs) {\r\n    const attr = attrs.getNamedItem(attrName);\r\n    if (attr) {\r\n      return attr.value;\r\n    }\r\n  }\r\n  return '';\r\n};\r\n\r\nconst childAt = (node, adapter, [index = 0], utils) =>\r\n  adapter.getChildAt(utils.getSingleNode(node, adapter), index);\r\n\r\nconst root = (node, adapter, args, utils) =>\r\n  utils.wrapWithProxy(adapter.getNodeRoot(node), adapter);\r\n\r\nconst parent = (node, adapter, args, utils) =>\r\n  utils.wrapWithProxy(adapter.getNodeParent(node), adapter);\r\n\r\nconst query = (node, adapter, [queryString], utils) => {\r\n\r\n};\r\n\r\nconst queryAll = (node, adapter, [queryString], utils) => {\r\n\r\n};\r\n\r\nexport default {\r\n  name,\r\n  text,\r\n  children,\r\n  attributes,\r\n  attribute,\r\n  childAt,\r\n  root,\r\n  parent,\r\n  query,\r\n  queryAll,\r\n};\r\n","const isList = (node) => node instanceof HTMLCollection || node instanceof Array;\r\n\r\nconst toList = (...args) => {\r\n  const { length } = args;\r\n  const [node] = args;\r\n\r\n  if (length === 1 && isList(node)) {\r\n    return node;\r\n  }\r\n\r\n  const list = [];\r\n\r\n  for (let index = 0; index < length; index++) {\r\n    const part = args[index];\r\n    if (isList(part)) {\r\n      list.push.call(part);\r\n    } else {\r\n      list.push(part);\r\n    }\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst isNode = (node) => node instanceof HTMLElement;\r\n\r\nconst toNode = (node) => {\r\n  // if list we use only first node\r\n  if (isList(node)) {\r\n    return node.length ? node[0] : null;\r\n  }\r\n\r\n  return isNode(node) ? node : null;\r\n};\r\n\r\nconst getNodeAt = (list, index = 0) => {\r\n  if (isList(list)) {\r\n    return list[index];\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst getLength = (list) => list.length;\r\n\r\n// Node\r\nconst getChildren = (node) => {\r\n  node = toNode(node);\r\n\r\n  // if not a node, return empty list\r\n  return isNode(node) ? node.children : toList();\r\n};\r\n\r\nconst getChildrenByName = (node, name) => {\r\n  name = name.toLowerCase();\r\n  const children = getChildren(node);\r\n  const { length } = children;\r\n\r\n  if (!length) {\r\n    return children;\r\n  }\r\n\r\n  const list = [];\r\n\r\n  for (let index = 0; index < children.length; index++) {\r\n    const child = children[index];\r\n    if (child.nodeName.toLowerCase() === name) {\r\n      list.push(child);\r\n    }\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst hasChildren = (node) => !!toNode(node).childElementCount;\r\n\r\nconst hasChild = (node, name) => {\r\n  const children = getChildren(node);\r\n  const { length } = children;\r\n\r\n  for (let index = 0; index < length; index++) {\r\n    if (children[index].nodeName === name) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst getChildAt = (node, index) => getChildren(node)[index];\r\n\r\nconst hasAttribute = (node, name) => toNode(node).hasAttribute(name);\r\n\r\nconst getAttributeValue = (node, name) => toNode(node).getAttribute(name);\r\n\r\nconst getName = (node) => toNode(node).nodeName;\r\n\r\nconst getText = (node) => toNode(node).innerText;\r\n\r\nconst getNodeParent = (node) => toNode(node).parentNode;\r\n\r\nconst getNodeRoot = (node) => toNode(node).getRootNode();\r\n\r\nconst validateRoot = (root) => {\r\n  if (root === undefined || root === document) {\r\n    return document.firstElementChild;\r\n  } else if (typeof root === 'string') {\r\n    return document.querySelector(root);\r\n  }\r\n\r\n  return root;\r\n};\r\n\r\nexport default {\r\n  isList,\r\n  toList,\r\n  isNode,\r\n  getNodeAt,\r\n  getLength,\r\n  getChildren,\r\n  getChildrenByName,\r\n  hasChildren,\r\n  hasChild,\r\n  getChildAt,\r\n  hasAttribute,\r\n  getAttributeValue,\r\n  getName,\r\n  getText,\r\n  getNodeParent,\r\n  getNodeRoot,\r\n  validateRoot,\r\n};\r\n","import { setDefaultAdapter, getDefaultAdapter } from './default-adapter';\nimport { setNamePrefix } from './prefixes';\nimport { addAugmentations, resetAugmentations } from './augmentations';\nimport wrapWithProxy from './wrapper';\n\nimport coreAugmentations from './augmentations/core';\nimport htmlEventAugmentations from './augmentations/event';\nimport htmlListAugmentations from './augmentations/list';\nimport htmlNodeAugmentations from './augmentations/node';\n\nimport HTMLROAdapter from './htmlro-adapter';\n\nconst ATTRIBUTE_KEY = '$';\n\nsetDefaultAdapter(HTMLROAdapter);\n\naddAugmentations(coreAugmentations);\naddAugmentations(htmlNodeAugmentations);\naddAugmentations(htmlListAugmentations);\naddAugmentations(htmlEventAugmentations);\n\nsetNamePrefix(ATTRIBUTE_KEY, (node, adapter, [name]) => adapter.getAttributeValue(node, name));\n\nconst create = (root, adapter = getDefaultAdapter()) =>\n  wrapWithProxy(adapter.validateRoot(root), adapter);\n\nexport {\n  setDefaultAdapter,\n  getDefaultAdapter,\n  addAugmentations,\n  resetAugmentations,\n  setNamePrefix,\n  create,\n};\n\nexport default create;\n"],"names":["defaultAdapter","setDefaultAdapter","adapter","getDefaultAdapter","namePrefixes","isValidPrefix","prefix","length","hasOwnProperty","isPrefixedKey","key","charAt","getPrefixHandler","setNamePrefix","handler","Error","augmentations","resetAugmentations","augs","addAugmentations","hasAugmentation","applyAugmentation","args","isIntKey","parseInt","getValue","node","childName","undefined","getChildrenByName","getSingleNode","value","isList","getNodeAt","getNodeList","toList","handlers","utils","createWalkerNode","TreeWalker","wrapWithProxy","isNode","Proxy","get","substr","has","hasChild","apply","thisArg","argumentsList","toString","valueOf","Symbol","toPrimitive","on","eventType","callback","off","emmit","event","getLength","first","filter","map","wrapNodes","reduce","head","name","getName","text","getText","children","list","getChildren","attributes","target","hasAttributes","attribute","attrName","attrs","attr","getNamedItem","childAt","index","getChildAt","root","getNodeRoot","parent","getNodeParent","query","queryString","queryAll","HTMLCollection","Array","part","push","call","HTMLElement","toNode","toLowerCase","child","nodeName","hasChildren","childElementCount","hasAttribute","getAttributeValue","getAttribute","innerText","parentNode","getRootNode","validateRoot","document","firstElementChild","querySelector","ATTRIBUTE_KEY","HTMLROAdapter","coreAugmentations","htmlNodeAugmentations","htmlListAugmentations","htmlEventAugmentations","create"],"mappings":"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"}